import axios from "axios";
import Head from "next/head";
import { GetStaticProps, NextPage } from "next/types";
import LayoutDefault from "../../components/layouts/LayoutDefault";
import PeopleListTemplate from "../../components/templates/CharactersListTemplate";

interface CharactersListPageProps {
  charactersData: Character[];
  pagesCount: number;
  pageCurrent: number | null;
}

const baseCharactersUrl = "https://swapi.dev/api/people";

const calcAvailablePage = ({
  entitiesCount,
  pageLength,
}: {
  entitiesCount: number | undefined;
  pageLength: number | undefined;
}) => (entitiesCount && pageLength ? Math.ceil(entitiesCount / pageLength) : 0);

const CharactersListPage: NextPage<CharactersListPageProps> = ({
  charactersData,
  pagesCount,
  pageCurrent,
}) => {
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <LayoutDefault>
          <PeopleListTemplate
            characters={charactersData}
            pagesCount={pagesCount}
            pageCurrent={pageCurrent}
          />
        </LayoutDefault>
      </main>
    </div>
  );
};

export const getStaticProps: GetStaticProps = async ({ params }) => {
  try {
    const { data: charactersInitialData } = await axios.get(
      `${baseCharactersUrl}`
    );

    const availablePagesCount = calcAvailablePage({
      entitiesCount: charactersInitialData.count,
      pageLength: charactersInitialData.results?.length,
    });

    if (!charactersInitialData) {
      return {
        notFound: true,
      };
    }

    return {
      props: {
        charactersData: charactersInitialData.results || [],
        pagesCount: availablePagesCount,
        pageCurrent: 1,
      },
      revalidate: 10,
    };
  } catch (error) {
    return {
      notFound: true,
    };
  }
};

export default CharactersListPage;
